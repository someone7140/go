// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
	"wasurena-task-api/db"
)

type CategoryInput struct {
	Name         string `json:"name"`
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
}

type CreateUserRegisterTokenResponse struct {
	Token    string `json:"token"`
	LineName string `json:"lineName"`
}

type Mutation struct {
}

type NewTaskExecute struct {
	TaskDefinitionID string  `json:"taskDefinitionId"`
	Memo             *string `json:"memo,omitempty"`
}

type NewUserAccount struct {
	AuthToken     string `json:"authToken"`
	UserSettingID string `json:"userSettingId"`
	UserName      string `json:"userName"`
}

type Query struct {
}

type TaskCategoryResponse struct {
	ID           string `json:"id"`
	Name         string `json:"name"`
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
}

type TaskCheckDisplayResponse struct {
	ID                      string                `json:"id"`
	Title                   string                `json:"title"`
	DisplayFlag             bool                  `json:"displayFlag"`
	NotificationFlag        bool                  `json:"notificationFlag"`
	CategoryID              *string               `json:"categoryId,omitempty"`
	CategoryName            *string               `json:"categoryName,omitempty"`
	DeadLineCheck           *db.DeadLineCheckEnum `json:"deadLineCheck,omitempty"`
	DeadLineCheckSubSetting map[string]any        `json:"deadLineCheckSubSetting,omitempty"`
	Detail                  *string               `json:"detail,omitempty"`
	LatestExecDateTime      *time.Time            `json:"latestExecDateTime,omitempty"`
	NextDeadLineDateTime    *time.Time            `json:"nextDeadLineDateTime,omitempty"`
	IsExceedDeadLine        bool                  `json:"isExceedDeadLine"`
}

type TaskDefinitionResponse struct {
	ID                      string                `json:"id"`
	Title                   string                `json:"title"`
	DisplayFlag             bool                  `json:"displayFlag"`
	NotificationFlag        bool                  `json:"notificationFlag"`
	CategoryID              *string               `json:"categoryId,omitempty"`
	CategoryName            *string               `json:"categoryName,omitempty"`
	DeadLineCheck           *db.DeadLineCheckEnum `json:"deadLineCheck,omitempty"`
	DeadLineCheckSubSetting map[string]any        `json:"deadLineCheckSubSetting,omitempty"`
	Detail                  *string               `json:"detail,omitempty"`
}

type TaskExecuteResponse struct {
	ID               string    `json:"id"`
	TaskDefinitionID string    `json:"taskDefinitionId"`
	ExecuteDateTime  time.Time `json:"executeDateTime"`
	Memo             *string   `json:"memo,omitempty"`
}

type TaskInput struct {
	Title                   string                `json:"title"`
	DisplayFlag             bool                  `json:"displayFlag"`
	NotificationFlag        bool                  `json:"notificationFlag"`
	CategoryID              *string               `json:"categoryId,omitempty"`
	DeadLineCheck           *db.DeadLineCheckEnum `json:"deadLineCheck,omitempty"`
	DeadLineCheckSubSetting map[string]any        `json:"deadLineCheckSubSetting,omitempty"`
	Detail                  *string               `json:"detail,omitempty"`
}

type UpdateUserAccountInput struct {
	UserSettingID string `json:"userSettingId"`
	UserName      string `json:"userName"`
}

type UserAccountResponse struct {
	Token           string  `json:"token"`
	UserSettingID   string  `json:"userSettingId"`
	UserName        string  `json:"userName"`
	ImageURL        *string `json:"imageUrl,omitempty"`
	IsLineBotFollow bool    `json:"isLineBotFollow"`
}
