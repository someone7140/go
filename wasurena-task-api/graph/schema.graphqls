# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Map

directive @isAuthenticated on FIELD_DEFINITION

input NewCategory {
  name: String!
  displayOrder: Int
}

enum DeadLineCheck {
  DailyOnce
  DailyHour
  WeeklyDay
  WeeklyDayInterval
  MonthOnce
  MonthDate
  YearOnceDate
}

input NewTask {
  title: String!
  displayFlag: Boolean!
  notificationFlag: Boolean!
  categoryId: String
  deadLineCheck: DeadLineCheck
  deadLineCheckSubSetting: Map
  detail: String
}

input NewTaskExecute {
  taskDefinitionId: String!
  memo: String
}

input NewUserAccount {
  authToken: String!
  userSettingId: String!
  userName: String!
}

type CreateUserRegisterTokenResponse {
  token: String!
  lineName: String!
}

type UserAccountResponse {
  token: String!
  userSettingId: String!
  userName: String!
  imageUrl: String
  isLineBotFollow: Boolean!
}

type TaskCategoryResponse {
  id: String!
  name: String!
  displayOrder: Int
}

type TaskDefinitionResponse {
  id: String!
  title: String!
  displayFlag: Boolean!
  notificationFlag: Boolean!
  categoryId: String
  categoryName: String
  deadLineCheck: DeadLineCheck
  deadLineCheckSubSetting: Map
  detail: String
}

type Query {
  getUserRegisterToken(lineAuthCode: String!): CreateUserRegisterTokenResponse
  getRegisteredUser(lineAuthCode: String!): UserAccountResponse
  getUserAccountFromAuthHeader: UserAccountResponse @isAuthenticated
  getTaskCategories: [TaskCategoryResponse!] @isAuthenticated
  getTaskDefinitions: [TaskDefinitionResponse!] @isAuthenticated
}

type Mutation {
  executeScheduleCheckBatch(token: String!): Boolean!
  createCategory(input: NewCategory!): Boolean! @isAuthenticated
  deleteCategory(id: String!): Boolean! @isAuthenticated
  createTask(input: NewTask!): Boolean! @isAuthenticated
  createTaskExecute(input: NewTaskExecute!): Boolean! @isAuthenticated
  createUserAccount(input: NewUserAccount!): UserAccountResponse
}
