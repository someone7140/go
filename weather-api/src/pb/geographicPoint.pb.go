// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: src/proto/geographicPoint.proto

package pb

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddGeographicPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lat  float64 `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon  float64 `protobuf:"fixed64,3,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *AddGeographicPointRequest) Reset() {
	*x = AddGeographicPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_geographicPoint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGeographicPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGeographicPointRequest) ProtoMessage() {}

func (x *AddGeographicPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_geographicPoint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGeographicPointRequest.ProtoReflect.Descriptor instead.
func (*AddGeographicPointRequest) Descriptor() ([]byte, []int) {
	return file_src_proto_geographicPoint_proto_rawDescGZIP(), []int{0}
}

func (x *AddGeographicPointRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddGeographicPointRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *AddGeographicPointRequest) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type RegsiterGeographicPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegsiterGeographicPointResponse) Reset() {
	*x = RegsiterGeographicPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_geographicPoint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegsiterGeographicPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegsiterGeographicPointResponse) ProtoMessage() {}

func (x *RegsiterGeographicPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_geographicPoint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegsiterGeographicPointResponse.ProtoReflect.Descriptor instead.
func (*RegsiterGeographicPointResponse) Descriptor() ([]byte, []int) {
	return file_src_proto_geographicPoint_proto_rawDescGZIP(), []int{1}
}

var File_src_proto_geographicPoint_proto protoreflect.FileDescriptor

var file_src_proto_geographicPoint_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x12, 0x09, 0x29, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x6c, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x12, 0x09, 0x29, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x1f,
	0x52, 0x65, 0x67, 0x73, 0x69, 0x74, 0x65, 0x72, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x74, 0x0a, 0x16, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x47, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x73, 0x69, 0x74, 0x65, 0x72, 0x47, 0x65, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62, 0x2f, 0x3b, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_proto_geographicPoint_proto_rawDescOnce sync.Once
	file_src_proto_geographicPoint_proto_rawDescData = file_src_proto_geographicPoint_proto_rawDesc
)

func file_src_proto_geographicPoint_proto_rawDescGZIP() []byte {
	file_src_proto_geographicPoint_proto_rawDescOnce.Do(func() {
		file_src_proto_geographicPoint_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_proto_geographicPoint_proto_rawDescData)
	})
	return file_src_proto_geographicPoint_proto_rawDescData
}

var file_src_proto_geographicPoint_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_src_proto_geographicPoint_proto_goTypes = []interface{}{
	(*AddGeographicPointRequest)(nil),       // 0: pb.AddGeographicPointRequest
	(*RegsiterGeographicPointResponse)(nil), // 1: pb.RegsiterGeographicPointResponse
}
var file_src_proto_geographicPoint_proto_depIdxs = []int32{
	0, // 0: pb.GeographicPointService.AddGeographicPoint:input_type -> pb.AddGeographicPointRequest
	1, // 1: pb.GeographicPointService.AddGeographicPoint:output_type -> pb.RegsiterGeographicPointResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_src_proto_geographicPoint_proto_init() }
func file_src_proto_geographicPoint_proto_init() {
	if File_src_proto_geographicPoint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_proto_geographicPoint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGeographicPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_proto_geographicPoint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegsiterGeographicPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_proto_geographicPoint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_proto_geographicPoint_proto_goTypes,
		DependencyIndexes: file_src_proto_geographicPoint_proto_depIdxs,
		MessageInfos:      file_src_proto_geographicPoint_proto_msgTypes,
	}.Build()
	File_src_proto_geographicPoint_proto = out.File
	file_src_proto_geographicPoint_proto_rawDesc = nil
	file_src_proto_geographicPoint_proto_goTypes = nil
	file_src_proto_geographicPoint_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GeographicPointServiceClient is the client API for GeographicPointService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeographicPointServiceClient interface {
	// 地点の追加
	AddGeographicPoint(ctx context.Context, in *AddGeographicPointRequest, opts ...grpc.CallOption) (*RegsiterGeographicPointResponse, error)
}

type geographicPointServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGeographicPointServiceClient(cc grpc.ClientConnInterface) GeographicPointServiceClient {
	return &geographicPointServiceClient{cc}
}

func (c *geographicPointServiceClient) AddGeographicPoint(ctx context.Context, in *AddGeographicPointRequest, opts ...grpc.CallOption) (*RegsiterGeographicPointResponse, error) {
	out := new(RegsiterGeographicPointResponse)
	err := c.cc.Invoke(ctx, "/pb.GeographicPointService/AddGeographicPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeographicPointServiceServer is the server API for GeographicPointService service.
type GeographicPointServiceServer interface {
	// 地点の追加
	AddGeographicPoint(context.Context, *AddGeographicPointRequest) (*RegsiterGeographicPointResponse, error)
}

// UnimplementedGeographicPointServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGeographicPointServiceServer struct {
}

func (*UnimplementedGeographicPointServiceServer) AddGeographicPoint(context.Context, *AddGeographicPointRequest) (*RegsiterGeographicPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGeographicPoint not implemented")
}

func RegisterGeographicPointServiceServer(s *grpc.Server, srv GeographicPointServiceServer) {
	s.RegisterService(&_GeographicPointService_serviceDesc, srv)
}

func _GeographicPointService_AddGeographicPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGeographicPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeographicPointServiceServer).AddGeographicPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GeographicPointService/AddGeographicPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeographicPointServiceServer).AddGeographicPoint(ctx, req.(*AddGeographicPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeographicPointService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GeographicPointService",
	HandlerType: (*GeographicPointServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddGeographicPoint",
			Handler:    _GeographicPointService_AddGeographicPoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/proto/geographicPoint.proto",
}
